#@# -*- coding: utf-8 -*-

= 表紙のお手軽な作り方（macOS編）

すでに前章で説明されているように、見栄えのいい表紙を自分で作る作業は、技術書を書く上での最難関のひとつといっていいでしょう。この章では、macOS上でKeynote.appを使って、表紙をお手軽に作る方法を紹介します。

なおKeynote.appを使うため、この章はmacOS（or iOS）限定です。（Text：カウプラン）


== KeynoteでB5やA5のPDFを作成する

B4やA5のPDFをKeynote.appで作成するには、次の手順で行います。

　　・Step1. スライドの幅と高さをB5やA5用に調整する

　　・Step2. スライドをPDFファイルに変換する

　　・Step3. PDFファイルの幅と高さを確認する

具体的に見てみましょう。

=== Step1. スライドの幅と高さを調整する

　１．Keynote.appでスライドを新規作成します（テーマは「ホワイト」）。右上の「マスターを変更」ボタンを押し、マスターを「空白」に変更します。

　２．右上の「書類」アイコン→「書類」タブ→「スライドのサイズ」で「カスタムのスライドサイズ...」を選択します（@<img>{cover-slidesize}）。

　３．スライドの大きさを指定するダイアログが出るので、幅と高さを指定します（単位：pt）。たとえばB5用なら516pt×728pt、塗り足し@<fn>{nuritashi1}用に上下3ミリずつ広げるなら533pt×745ptです（他のサイズは後述）。

//footnote[nuritashi1][塗り足しについては後述。]

残念ながら、Keynote.appでは幅と高さをcmやmmでは指定できません。そのため、B5やA5の幅と高さをptに換算して指定する必要があります。換算方法については後述します。

//image[cover-slidesize][スライドの幅と高さを調整する][scale=0.7]

=== Step2. スライドをPDFファイルに変換する

　１．Keynote.app画面上のメニューから「ファイル」→「書き出す」→「PDF...」を選びます。

　２．ダイアログで、「イメージの品質」を「高」または「最高」にして、「次へ...」を押します。

　３．ファイル保存用のダイアログが出るので、ファイル名を指定して「書き出す」を押します。

このとき、スライドの幅と高さがそのままPDFの幅と高さになります。変更はできません。


=== Step3. PDFファイルの幅と高さを確認する

　１．書き出したファイルを、Finder.appでダブルクリックします。

　２．Preview.appで開かれるので、Command+i（Commandキーを押しながらi）を押します。

　３．ダイアログが出るので、いちばん左のタブを選ぶと、PDFページの大きさ（例：18.81@<m>{\times}26.29 cm）が表示されます（@<img>{cover-pdfsize2}）。

#@#//image[cover-pdfsize][PDFの幅と高さを確認する][scale=0.5]
//image[cover-pdfsize2][PDFの幅と高さを確認する][scale=0.5]

以上の手順により、Keynote.appでB5やA5のPDFファイルを作ることができます。


== cmやmmをptに変換する

前述したように、Keynote.appではスライドの大きさをptでしか指定できず、cmやmmでは指定できません。しかしB5やA5といった規格はcmやmmで規定されているため、Keynote.appではそれらをptに変換する必要があります。

ためしに、デフォルトの幅と高さ（1024pt×768pt）でスライドを作成し、PDFファイルに変換してみましょう。そしてPreview.appでそのファイルを開き、Command+iで幅と高さを調べると、幅36.13cm、高さ27.1cmになっているはずです。つまり、「1024pt×768pt」は「36.13cm×27.1cm」だということです。

よって、たとえばB5サイズ（幅18.2cm、高さ25.7cm）をptに変換するには、次のように計算します@<fn>{keynote-cm2pt}。

　　・幅：1024pt ÷ 36.13cm × 18.2cm ＝ 515.8pt ≒ 516pt

　　・高さ：768pt ÷ 27.1cm × 25.7 ＝ 718.3pt ≒ 718pt

//footnote[keynote-cm2pt][これで分かるように、どうしても0.数ミリ程度の誤差はでます。しかし塗り足し部分は印刷後に切り落とされるので、通常はこの程度の誤差を気にする必要はありません。]

主な用紙サイズと対応するスライドの大きさを、@<table>{pagesize}に掲げておきます@<fn>{nuritashi2}。
//footnote[nuritashi2][塗り足しについては次節参照。]

//table[pagesize][主な用紙サイズと対応するスライドの大きさ]{
用紙	塗り足し	用紙幅@<m>{\times}高さ	スライド幅@<m>{\times}高さ	備考
----------------------------------------
A4	なし	21.0cm@<m>{\times}29.7cm	595pt@<m>{\times} 842pt	会社や大学ではいちばん一般的
A4	上下左右3mm	21.6cm@<m>{\times}30.3cm	612pt@<m>{\times} 859pt	 同人誌ではほとんど見かけない
B5	なし	18.2cm@<m>{\times}25.7cm	516pt@<m>{\times} 728pt	ジャンプやマガジンやLaLaの大きさ
B5	上下左右3mm	18.8cm@<m>{\times}26.3cm	533pt@<m>{\times} 745pt	同人誌ではいちばん一般的
A5	なし	14.8cm@<m>{\times}21.0cm	419pt@<m>{\times} 595pt	コロコロやボンボンやLaLaDXの大きさ
A5	上下左右3mm	15.4cm@<m>{\times}21.6cm	436pt@<m>{\times} 612pt	同人誌ではB5の次に一般的
//}


== 塗り足し

表紙を作成するときは、B5ちょうどやA5ちょうどの大きさで作成することはほとんどなく、通常は上下左右に3〜5mmずつ広げた大きさで作成します。この広げた部分を「塗り足し」といいます。

これは、印刷所で印刷するときB5ちょうどやA5ちょうどの大きさの紙にぴったり印刷できないためで、通常B5やA5より大きなサイズで印刷し、そのあと上下左右を裁断機で切り落としています。この切り落とし部分があるために、表紙では塗り足しが必要になっています。詳しくは「同人誌 表紙 塗り足し」などでインターネット検索してみてください。

例外として、表紙の上下左右がすべて白色（色がついていない）の場合にのみ、塗り足しがなくても印刷できます。何らかの事情でB5ぴったりの大きさでしか表紙が作れない（つまり塗り足しが加えられない）場合は、イラストや写真やタイトルが表紙の上下左右にかからないようにしましょう。

塗り足しの幅は3mmが多いのですが、印刷所によっては5mmとしている場合もあります。心配であれば印刷所のホームページで確認しましょう。また「5mm」と指定されている印刷所に3mmの塗り足しで入稿しても、通常は問題ないはずです。塗り足しは切り落としされる領域なので、塗り足しの幅にはあまり神経質にならなくてもいいです。

なお塗り足しは、（文字中心の技術書であれば）表紙以外の原稿本文では必要ありません。あくまで表紙でのみ必要とされます。原稿本文はB5やA5ちょうどの大きさで作成しましょう。また印刷をしない、ダウンロード用のPDFを作る場合も、塗り足しは必要ありません。


== 表紙デザイン

（表紙デザインについては、すでに前章でも説明されています。そちらもご覧ください。）

イラストレーターにイラストを外注するのでなければ、表紙は自分でデザインすることになります。そして、デザインの悪い表紙を作ってしまうと、同人誌の売上に大きな悪影響があります。

悪いデザイン例を見てみましょう。@<img>{cover-badexample}は筆者の実際の同人誌で使われた表紙です。タイトルを大きくしてる点は評価できるものの、目をひくものが何もなく、印刷代を安くするために白黒にした@<fn>{cover-monocolor}ことを考慮しても、ひどいデザインです。事実、この同人誌はかなり売れ残ってしまいました。悪いデザインの表紙が売上に悪影響を与えた実例です。泣ける……。
//footnote[cover-monocolor][印刷所によっては、表紙をカラーではなくモノクロにすると安くなるプランがあります。]

//image[cover-badexample][悪いデザイン例。実際に爆死を招きかけた。][scale=0.5]

//embed[latex]{
  \newpage
//}


表紙デザインの重要性が分かったところで、今度は表紙のデザイン方法を見てみましょう。

実は、表紙の要素は次の3つしかありません。

　・文字

　・図形

　・写真やイラスト

これをうまく組み合わせるだけで、そこそこ見栄えのする表紙がデザインできます。どのように組み合わせるのがいいかは、既存の書籍を参考にすればいいでしょう。

実際に上の3つを組み合わせて、表紙のサンプルをいくつか作ってみました。


　・@<img>{cover-samples1}は、文字と図形を組み合わせた表紙のサンプルです。写真画像やイラストを使ってないので、簡単に作れます。

　・@<img>{cover-samples2}は、タイトル文字列と1枚の写真を組み合わせた表紙のサンプルです。よさそうな写真が1枚あれば、これも簡単に作れます。

　・@<img>{cover-samples3}は、1枚の写真を全面に敷き詰めた表紙のサンプルです。これはセンスのある写真選びがとても重要ですが、それさえ何とかできれば、雑誌風のおしゃれな表紙になります。ただし、印刷するなら解像度の高い写真を使ってください。

　・@<img>{cover-samples4}は、複数枚の写真を組み合わせた表紙のサンプルです。写真の解像度が低くても、枚数を多くすれば1枚あたりの解像度の低さが問題にならなくなるという利点があります。

　・@<img>{cover-samples5}は、写真ではなくイラストやクリップアートを使った表紙のサンプルです。4枚目は「ブラックジャックによろしく」というマンガであり、作者により二次使用が許可されている@<fn>{hello-blackjack}ため、商用であっても自由に使えます。
//footnote[hello-blackjack][http://mangaonweb.com/news/2014/11/17/64]

なお、今回使用した写真やイラストは、以下のサイトからフリー素材としてダウンロードできます。素材作者の皆様、ありがとうございます。


　・Unsplash (https://unsplash.com/)

　・フォトスク (http://photosku.com/)

　・ree.Stocker (http://free.stocker.jp/)

　・openclipart (https://openclipart.org/)

　・pixabay (https://pixabay.com/ja/)

　・パブリックドメインQ (http://publicdomainq.net/)

　・あやえも研究所 (http://ayaemo.skr.jp/material_magic_circuit.html)

　・佐藤漫画製作所 (http://mangaonweb.com/company/download.html)

//image[cover-samples1][文字と図形を組み合わせた表紙サンプル]

//image[cover-samples2][タイトルと画像1枚の表紙サンプル]

//image[cover-samples3][1枚の画像を全面に使用した表紙サンプル]

//image[cover-samples4][複数枚の画像を使った表紙サンプル]

//image[cover-samples5][イラストを使った表紙サンプル]


== 写真やイラストの素材

表紙に写真やイラストを使う場合は、著作権やライセンスに注意しましょう。そのうえで素材を集める方法を紹介します。


　・まずは、自分のスマートフォンで撮った写真を使うことを考えましょう。著作権やライセンスのことを考えると、これがいちばん無難です。最近のスマートフォンのカメラは十分な性能があるので、おしゃれなカフェにでも行って小物や食事の写真を撮れば、同人誌の表紙に使う素材としては十分です。

　・はてなブックマークで「素材 写真」や「素材 アイコン」で検索すると、まとめ記事がたくさんヒットします。Googleで検索するよりも情報がまとまっています。さすがまとめ記事。

　・古い絵画の写真は著作権を気にせず自由に使えることが多いです@<fn>{public-image}。ゴッホやモネやミュシャや北斎や写楽の高解像度の写真を探してみましょう。また、たとえばメトロポリタン美術館が所蔵作品をパブリックドメインで公開しており@<fn>{metropolitan}、商用でも自由に使えます。
//footnote[public-image][とはいえライセンスは確認してください。]
//footnote[metropolitan][https://www.metmuseum.org/art/collection]

ここで残念なお知らせがあります：@<b>{Keynote.appに付属する画像は、二次利用できない可能性が高いです}。Keynote.appの利用規約@<fn>{keynote-legal}の27ページ目に「F.コンテンツおよびデジタルマップ」という項目があり、そこに「（Keynoteに含まれる写真や画像を）商業的かどうかに関わらず、スタンドアローンベースで、使用、引用または頒布することはできず」とあります。なので、Keynote.appに含まれている画像を同人誌に使うのは避けたほうがいいでしょう。
//footnote[keynote-legal][https://images.apple.com/legal/sla/docs/Keynote.pdf]


== 注意事項


　・タイトルはなるべく大きく太くして、目立たせましょう。目安としては「即売会会場の通路を歩いている人がぱっと見たときにタイトルが目に入る大きさ」です。そのために、フォントは明朝体よりゴシック体、太さも標準より太字をお勧めします。

　・タイトルは、キーワードを目立つようにしましょう。たとえばタイトルが「jQueryであと10年戦うための本」というタイトルなら、キーワードである「jQuery」を大きくし、フォントを変え、色もカラフルにするなどしましょう。

　・写真を使うなら、高解像度（300dpi以上）の写真を使いましょう。そうしないと、印刷したときに残念な仕上がりになります。

　・写真に目がいくけどタイトルに目がいかないようなデザインは避けましょう。そのために、画像を少しだけボカすことをお薦めします。写真画像をPreview.appで開き、メニューから「ツール」→「カラーを調整...」を選び、ダイアログの下のほうにある「シャープネス」をいちばん左に持ってくると、画像が少しだけボケます。ほんの少しの違いですが、これで写真よりタイトルに目がいくようになります。

　・イラストレーターに描いてもらったイラストを使う場合は、イラストを全面的に押し出しましょう。タイトルは二の次でいいです。ボカすなんてのはもってのほかです。


== 背表紙

薄くない同人誌の場合は、背表紙も必要になります。背表紙は、高さは表紙と同じですが、幅はページ数と紙の厚さで変わるので、印刷所に相談しましょう。または入稿したあとに、印刷所から連絡が来て背表紙の大きさを教えてくれます。

背表紙では、タイトルを縦書きにします。Keynote.appは縦書きをサポートしてないので、かわりに「1文字ずつ改行したテキスト」を使います@<fn>{keynote-tate}。ちょっと面倒ですが、これが必要になるのは背表紙でだけなので、我慢しましょう。
//footnote[keynote-tate][テキストボックスの幅を1文字分にする方法もありますが、これだと行の間隔を狭めることで小さい文字の位置を調整する方法がとれません。]

ただしこの方法だと、「ゃ」「ゅ」「ょ」「っ」のような小さい文字の位置がずれます。たとえば「オブジェクト指向」という文字列を縦書きにすると、「ジ」と「ェ」が離れて見えます（@<img>{cover-backbone}の左）。

そこで、「ジ」と「ェ」の行間を狭くします。手順は次の通りです。

 1. 「ジ」をクリックして、カーソルが「ジ」の右または左にある状態にします。
 2. 右上の「フォーマット」アイコン→「テキスト」タブを選び、「間隔」を「0.8行」にします。

これで、@<img>{cover-backbone}の右のように「ジ」と「ェ」を詰めることができました。

//image[cover-backbone][縦書きで「ジ」と「ェ」の間が空いているのを詰める]

またタイトルに長音（「ー」）やカッコが入っている場合は、その文字だけ別のテキストボックスにして90度回転させるような工夫が必要です。面倒ですね。思いきって、背表紙も横書きにしてもいいかもしれません。


== おすすめ書籍

表紙デザインに興味を持ったら、デザインに関する入門書を読んでみましょう。以下の本をおすすめしておきます。


　・「デザイン入門教室［特別講義］」坂本伸二、SBクリエイティブ、2015年

　・「伝わるデザインの基本 増補改訂版」高橋佑麿、片山なつ、技術評論社、2016年

　・「デザインの教科書 - 手を動かして学ぶデザイントレーニング」佐藤好彦、MdNコーポレーション、2008年

　・「同人誌のデザイン - 手に入れたくなる装丁のアイデア」井上綾乃、BNN新社、2017年


== まとめ

Keynote.appを使って、表紙をお手軽に作成する方法を説明しました。また表紙デザインの参考となるサンプルも紹介しました。同人誌の表紙といえば二次元イラストのイメージが強いですが、イラストがなくても、そこそこ見栄えのする表紙を自分で作れます。参考にしてください。


====[column] Pages.appで表紙を作成する

Keynote.app（プレゼンテーションソフト）ではなく、Pages.app（ワープロソフト）でも表紙を作成できます。

Keynote.appと違い、Pages.appではドキュメントの用紙サイズにB5やA5を直接指定できます。ただし塗り足しは指定できないので、「塗り足し分広げたB5」を新しい用紙サイズとして登録します。

１．メニューから「ファイル」→「ページ設定...」を選びます。

２．ダイアログが出るので、「対象プリンタ」で「任意のプリンタ」、「用紙サイズ」で「カスタムサイズを管理...」を選びます。

３．別のダイアログが出るので、左下の「+」アイコンをクリックし、新しい用紙サイズを登録します。「プリントされない領域」は「ユーザ定義」を選び、上下左右はすべて「0mm」にします。

これで、塗り足し分広げた大きさの用紙サイズを登録できたので、これをPages.appでドキュメントの用紙サイズとして指定すれば、Pages.appで表紙が作成できます。この方法なら幅と高さをmmで指定できるので、ptで指定するKeynote.appとは違ってミリ以下のズレが発生しません。

ただし、Pages.appでは図形やテキスト文字列が思うようには配置できません。その場合は、図形やテキスト文字列をクリックし、「フォーマット」アイコン→「配置」タブを選び、「テキスト折り返し」を「なし」にしてください。これでKeynote.appと同じように、自由に配置できるはずです。

====[/column]